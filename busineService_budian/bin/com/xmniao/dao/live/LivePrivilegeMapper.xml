<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmniao.dao.live.LivePrivilegeDao" >
  <resultMap id="BaseResultMap" type="com.xmniao.domain.live.LivePrivilege" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="object_oriented" property="objectOriented" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="total_ledger_amount" property="totalLedgerAmount" jdbcType="DECIMAL" />
    <result column="consume_ledger" property="consumeLedger" jdbcType="DECIMAL" />
    <result column="privilege_ledger" property="privilegeLedger" jdbcType="DECIMAL" />
    <result column="current_consume_ledger" property="currentConsumeLedger" jdbcType="DECIMAL" />
    <result column="current_privilege_ledger" property="currentPrivilegeLedger" jdbcType="DECIMAL" />
    <result column="current_dividend_ledger" property="currentDividendLedger" jdbcType="DECIMAL" />
    <result column="current_dividend_coin_ledger" property="currentDividendCoinLedger" jdbcType="DECIMAL" />
    <result column="ledger_level" property="ledgerLevel" jdbcType="INTEGER" />
    <result column="has_recomend" property="hasRecomend" jdbcType="INTEGER" />
    <result column="has_dividend" property="hasDividend" jdbcType="INTEGER" />
    <result column="debitcard_id" property="debitcardId" jdbcType="INTEGER" />
    <result column="quota" property="quota" jdbcType="DECIMAL" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="base_amount" property="baseAmount" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_no, object_oriented, uid, payment, create_time, update_time, total_ledger_amount, 
    consume_ledger, privilege_ledger, current_consume_ledger, current_privilege_ledger, 
    current_dividend_ledger, current_dividend_coin_ledger, ledger_level, has_recomend, 
    has_dividend, debitcard_id, quota, version,base_amount
  </sql>
  
  <select id="getLivePrivilege" resultMap="BaseResultMap" parameterType="com.xmniao.domain.live.LivePrivilege" >
    select 
    <include refid="Base_Column_List" />
    from t_live_privilege
    where 
    <if test="id!=null">id=#{id}</if>
	<if test="orderNo!=null and  orderNo!=''">order_no=#{orderNo}</if>
  	<if test="objectOriented!=null">object_oriented=#{objectOriented}</if>
  </select>
  
  <insert id="initPrivilegeInfo" parameterType="com.xmniao.domain.live.LivePrivilege" >
    insert into t_live_privilege
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="objectOriented != null" >
        object_oriented,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="totalLedgerAmount != null" >
        total_ledger_amount,
      </if>
      <if test="consumeLedger != null" >
        consume_ledger,
      </if>
      <if test="privilegeLedger != null" >
        privilege_ledger,
      </if>
      <if test="currentConsumeLedger != null" >
        current_consume_ledger,
      </if>
      <if test="currentPrivilegeLedger != null" >
        current_privilege_ledger,
      </if>
      <if test="currentDividendLedger != null" >
        current_dividend_ledger,
      </if>
      <if test="currentDividendCoinLedger != null" >
        current_dividend_coin_ledger,
      </if>
      <if test="ledgerLevel != null" >
        ledger_level,
      </if>
      <if test="hasRecomend != null" >
        has_recomend,
      </if>
      <if test="hasDividend != null" >
        has_dividend,
      </if>
      <if test="debitcardId != null" >
        debitcard_id,
      </if>
      <if test="quota != null" >
        quota,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="periodExcitation != null" >
        period_excitation,
      </if>
      <if test="curPeriodExcitation != null" >
        cur_period_excitation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="objectOriented != null" >
        #{objectOriented,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalLedgerAmount != null" >
        #{totalLedgerAmount,jdbcType=DECIMAL},
      </if>
      <if test="consumeLedger != null" >
        #{consumeLedger,jdbcType=DECIMAL},
      </if>
      <if test="privilegeLedger != null" >
        #{privilegeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentConsumeLedger != null" >
        #{currentConsumeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentPrivilegeLedger != null" >
        #{currentPrivilegeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentDividendLedger != null" >
        #{currentDividendLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentDividendCoinLedger != null" >
        #{currentDividendCoinLedger,jdbcType=DECIMAL},
      </if>
      <if test="ledgerLevel != null" >
        #{ledgerLevel,jdbcType=INTEGER},
      </if>
      <if test="hasRecomend != null" >
        #{hasRecomend,jdbcType=INTEGER},
      </if>
      <if test="hasDividend != null" >
        #{hasDividend,jdbcType=INTEGER},
      </if>
      <if test="debitcardId != null" >
        #{debitcardId,jdbcType=INTEGER},
      </if>
      <if test="quota != null" >
        #{quota,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="periodExcitation != null" >
        #{periodExcitation,jdbcType=INTEGER},
      </if>
      <if test="curPeriodExcitation != null" >
        #{curPeriodExcitation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateLiveOrderLedger" parameterType="com.xmniao.domain.live.LivePrivilege" >
    update t_live_privilege
    <set >
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentConsumeLedger != null" >
        current_consume_ledger = #{currentConsumeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentPrivilegeLedger != null" >
        current_privilege_ledger = #{currentPrivilegeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentDividendLedger != null" >
        current_dividend_ledger = #{currentDividendLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentDividendCoinLedger != null" >
        current_dividend_coin_ledger = #{currentDividendCoinLedger,jdbcType=DECIMAL},
      </if>
      <if test="quota != null" >
        quota = #{quota,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--更新已领取期次-->
    <update id="updateCurPeriodExcitation">
        UPDATE t_live_privilege
        SET cur_period_excitation = cur_period_excitation+1
        WHERE id = #{id}
    </update>

    <select id="getHighestLedgerOrder" parameterType="Map" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from (
			SELECT <include refid="Base_Column_List" /> FROM
				(SELECT <include refid="Base_Column_List" /> FROM t_live_privilege WHERE  uid=#{uid} AND privilege_ledger>0 AND object_oriented IN (1,3) ORDER BY id DESC LIMIT 1) v
			UNION 
			SELECT <include refid="Base_Column_List" /> FROM t_live_privilege WHERE uid=#{uid} AND privilege_ledger>0 AND object_oriented =2 
		) v2 
		order by payment desc limit 1
	</select>
	
	<select id="getLiveOrderHasDividendsUserList" resultType="java.lang.Integer">
		SELECT uid 
		FROM t_live_privilege 
		WHERE privilege_ledger>0 AND payment>(current_dividend_ledger+current_dividend_coin_ledger) and object_oriented>0
		<if test="uids != null and uids !=''">AND uid in (${uids})</if>
		GROUP BY uid
		<if test="pageNo!=null and pageSize!=null">
		LIMIT ${pageNo*pageSize},#{pageSize}
		</if>
	</select>
	
	<select id="getLiveOrderListByLedgering" resultMap="BaseResultMap" parameterType="Map">
		SELECT <include refid="Base_Column_List" /> FROM
			(SELECT <include refid="Base_Column_List" /> FROM t_live_privilege WHERE uid=#{uid}  AND privilege_ledger>0 AND object_oriented IN (1,3) ORDER BY id DESC LIMIT 1) v
		UNION 
		SELECT <include refid="Base_Column_List" /> FROM t_live_privilege WHERE uid=#{uid}  AND privilege_ledger>0 AND object_oriented =2 ORDER BY create_time
	</select>

	<select id="getLiveOrderByLedger" resultMap="BaseResultMap" parameterType="Map">
		SELECT 
			<include refid="Base_Column_List" />
		FROM t_live_privilege 
		WHERE uid=#{uid}  AND privilege_ledger>0 and object_oriented=#{objectOriented}
		ORDER BY id DESC LIMIT 1
	</select>
	
	<select id="getSellerCoinOrderList" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />  
		FROM t_live_privilege 
		WHERE uid=#{uid} AND object_oriented=102 AND payment>current_consume_ledger
	</select>
		
	<select id="getAvailableExchangeCoinList" resultType="map" parameterType="map">
		SELECT 
		CAST(uid AS CHAR)uid,CAST(SUM(coin) AS CHAR) coin 
		FROM (
		SELECT * FROM (
		SELECT uid,SUM(IF(current_consume_ledger IS NULL,0,current_consume_ledger)) coin FROM t_live_pay_order WHERE pay_state=1 AND object_oriented=2 GROUP BY uid ) t1
		UNION ALL 
		SELECT * FROM (
		SELECT uid,SUM(IF(current_privilege_ledger IS NULL ,0,current_privilege_ledger)) coin FROM t_live_pay_order WHERE pay_state=1 AND object_oriented IN (1,3) GROUP BY uid )t2
		) t3 WHERE coin>0 
		GROUP BY uid  
		LIMIT ${pageNo*pageSize},#{pageSize}
	</select>
	
	<select id="getHighestDebitcardLedgerOrder" parameterType="Map" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" /> 
		FROM t_live_privilege 
		WHERE uid=#{uid} AND privilege_ledger>0 AND object_oriented =2 AND privilege_ledger>current_privilege_ledger
		order by payment desc limit 1
	</select>
	
	<select id="getConsumeOrderList" parameterType="map" resultMap="BaseResultMap" >
		SELECT <include refid="Base_Column_List" />  
		FROM t_live_privilege 
		WHERE uid=#{uid} AND consume_ledger>current_consume_ledger 
		ORDER BY object_oriented,create_time
	</select>
    <!--查询满足发放奖励的方案A充值记录-->
    <select id="selectRechargeRecordListForPlanA" resultMap="BaseResultMap">
        <![CDATA[
        select p.* from t_live_privilege p LEFT JOIN t_live_pay_order o
                on o.order_no = p.order_no
        where p.payment*0.8 <= p.current_consume_ledger
              and p.object_oriented = 4
              AND p.period_excitation > p.cur_period_excitation
              and o.excitation_project = 'A'
        ]]>
    </select>
</mapper>