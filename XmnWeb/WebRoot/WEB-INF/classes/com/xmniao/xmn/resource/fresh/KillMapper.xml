<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmniao.xmn.core.fresh.dao.KillDao">
  <resultMap id="BaseResultMap" type="com.xmniao.xmn.core.fresh.entity.Kill">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="termin_time" jdbcType="TIMESTAMP" property="terminTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="order_limit" jdbcType="INTEGER" property="orderLimit" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="label_id" jdbcType="INTEGER" property="labelId" />
    <result column="bill_num" jdbcType="INTEGER" property="billNum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, start_time, end_time, image, state, order_limit, update_time, create_time,termin_time
  </sql>
  <sql id="whereSQL">
  	<if test="id != null">
       and id=#{id}
      </if>
      <if test="title != null and title !=''">
        and title like '%${title}%'
      </if>
      <if test="startTime != null and endTime != null">
          and start_time > #{startTime} and end_time &lt; #{endTime}
     </if>
     <choose>
    		<when test="proceedStatus == 1">
    			and start_time > now() and state = 0
    		</when>
    		<when test="proceedStatus == 2">
    			and start_time &lt; now() and end_time > now() and state = 0
    		</when>
    		<when test="proceedStatus == 3">
    			and end_time &lt; now() 
    		</when>
    	</choose>
      <if test="state != null">
        and state=#{state}
      </if>
      <if test="orderLimit != null">
        and order_limit=#{orderLimit} 
      </if>
  </sql>
  <select id="getKillChoose" resultMap="BaseResultMap">
  	  select 
    <include refid="Base_Column_List" />
    from t_fresh_spike_activity
    where state = 0 and end_time > now()
  </select>
  <update id="end">
  		update t_fresh_spike_activity set state = #{state},update_time=now() where id = #{id}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_fresh_spike_activity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_fresh_spike_activity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xmniao.xmn.core.fresh.entity.Kill">
    insert into t_fresh_spike_activity (id, title, start_time, 
      end_time, image, state, 
      order_limit, update_time, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{image,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{orderLimit,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id="getList" parameterType="com.xmniao.xmn.core.fresh.entity.Kill" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />,IFNULL(bill.sum,0) as bill_num
    from t_fresh_spike_activity
    left join (select b.spike_id,sum(count) as sum from (select a.activityId,count(1) as count,a.spike_id  from (select t_product_bill.activityId,common.spike_id from t_product_bill join t_fresh_activity_common common on t_product_bill.activityId=common.id GROUP BY  t_product_bill.bid) a GROUP BY a.activityId) b GROUP BY b.spike_id) as bill
    on bill.spike_id = t_fresh_spike_activity.id
     where (t_fresh_spike_activity.state = 0 or t_fresh_spike_activity.state = 1)
     <include refid="whereSQL" />
      order by t_fresh_spike_activity.update_time desc
      <if test=" limit != -1 ">
			LIMIT ${(page-1)*limit},#{limit}
		</if>
    </select>
  <select id="count" parameterType="com.xmniao.xmn.core.fresh.entity.Kill" resultType="java.lang.Long">
 	select
  		count(1)
    from t_fresh_spike_activity where (state = 0 or state = 1)
      <include refid="whereSQL" />
    </select>
  <insert id="add" parameterType="com.xmniao.xmn.core.fresh.entity.Kill" useGeneratedKeys="true" keyProperty="id">
    insert into t_fresh_spike_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="orderLimit != null">
        order_limit,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="orderLimit != null">
        #{orderLimit,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.xmniao.xmn.core.fresh.entity.Kill">
    update t_fresh_spike_activity
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="orderLimit != null">
        order_limit = #{orderLimit,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmniao.xmn.core.fresh.entity.Kill">
    update t_fresh_spike_activity
    set title = #{title,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      image = #{image,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      order_limit = #{orderLimit,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>