<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmniao.xmn.core.fresh.dao.FreshImageDao">
  <resultMap id="BaseResultMap" type="com.xmniao.xmn.core.fresh.entity.FreshImage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="jump_type" jdbcType="INTEGER" property="jumpType" />
    <result column="jump_product_id" jdbcType="BIGINT" property="jumpProductId" />
    <result column="jump_url" jdbcType="VARCHAR" property="jumpUrl" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, state, type, type_id, title, image_url, jump_type, jump_product_id, jump_url, 
    sort, update_time, create_time,remark,jump_activity_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_fresh_image
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_fresh_image
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xmniao.xmn.core.fresh.entity.FreshImage">
    insert into t_fresh_image (id, state, type, 
      type_id, title, image_url, 
      jump_type, jump_product_id, jump_url, 
      sort, update_time, create_time,remark
      )
    values (#{id,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{typeId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, 
      #{jumpType,jdbcType=INTEGER}, #{jumpProductId,jdbcType=BIGINT}, #{jumpUrl,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xmniao.xmn.core.fresh.entity.FreshImage" useGeneratedKeys="true" keyProperty="id">
    insert into t_fresh_image
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="state != null">
        state,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="jumpType != null">
        jump_type,
      </if>
      <if test="jumpProductId != null">
        jump_product_id,
      </if>
      <if test="jumpUrl != null">
        jump_url,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="jumpActivityId != null">
        jump_activity_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="jumpType != null">
        #{jumpType,jdbcType=INTEGER},
      </if>
      <if test="jumpProductId != null">
        #{jumpProductId,jdbcType=BIGINT},
      </if>
      <if test="jumpUrl != null">
        #{jumpUrl,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="jumpActivityId != null">
        #{jumpActivityId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmniao.xmn.core.fresh.entity.FreshImage">
    update t_fresh_image
    <set>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="jumpType != null">
        jump_type = #{jumpType,jdbcType=INTEGER},
      </if>
      <if test="jumpProductId != null">
        jump_product_id = #{jumpProductId,jdbcType=BIGINT},
      </if>
      <if test="jumpUrl != null">
        jump_url = #{jumpUrl,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmniao.xmn.core.fresh.entity.FreshImage">
    update t_fresh_image
    set state = #{state,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      jump_type = #{jumpType,jdbcType=INTEGER},
      jump_product_id = #{jumpProductId,jdbcType=BIGINT},
      jump_url = #{jumpUrl,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="deleteAllByTypeId">
  	update t_fresh_image set state = 2 where type_id = #{typeId} and type = #{type}
  </update>
  <select id="getList" resultMap="BaseResultMap">
	select
	 <include refid="Base_Column_List" />
    from t_fresh_image where 1=1
  
    	 <if test="state != null">
        and state = #{state,jdbcType=INTEGER}
      </if>
      <if test="type != null">
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="typeId != null">
        and type_id = #{typeId,jdbcType=BIGINT}
      </if>
      <if test="title != null">
        and title = #{title,jdbcType=VARCHAR}
      </if>
      <if test="imageUrl != null">
        and image_url = #{imageUrl,jdbcType=VARCHAR}
      </if>
      <if test="jumpType != null">
        and jump_type = #{jumpType,jdbcType=INTEGER}
      </if>
      <if test="jumpProductId != null">
        and jump_product_id = #{jumpProductId,jdbcType=BIGINT}
      </if>
      <if test="jumpUrl != null">
        and jump_url = #{jumpUrl,jdbcType=VARCHAR}
      </if>
      <if test="sort != null">
        and sort = #{sort,jdbcType=INTEGER}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
 	  <if test="orderBy != null and orderBy != ''">
 	  	 order by sort ${orderBy}
 	  </if>
     
  </select>
  
  <update id="deleteBanner">
  	update t_fresh_image set state = 2 where type = #{type} and type_id = #{typeId}
  </update>
</mapper>