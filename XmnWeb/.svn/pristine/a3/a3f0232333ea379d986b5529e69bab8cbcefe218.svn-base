<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmniao.xmn.core.reward_dividends.dao.TLivePrivilegeDao" >
  <parameterMap type="LivePrivilege" id="livePrivilege" />  
  <resultMap id="BaseResultMap" type="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="object_oriented" property="objectOriented" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="total_ledger_amount" property="totalLedgerAmount" jdbcType="DECIMAL" />
    <result column="consume_ledger" property="consumeLedger" jdbcType="DECIMAL" />
    <result column="privilege_ledger" property="privilegeLedger" jdbcType="DECIMAL" />
    <result column="current_consume_ledger" property="currentConsumeLedger" jdbcType="DECIMAL" />
    <result column="current_privilege_ledger" property="currentPrivilegeLedger" jdbcType="DECIMAL" />
    <result column="current_dividend_ledger" property="currentDividendLedger" jdbcType="DECIMAL" />
    <result column="current_dividend_coin_ledger" property="currentDividendCoinLedger" jdbcType="DECIMAL" />
    <result column="ledger_level" property="ledgerLevel" jdbcType="INTEGER" />
    <result column="debitcard_id" property="debitcardId" jdbcType="INTEGER" />
    <result column="quota" property="quota" jdbcType="DECIMAL" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="has_recomend" property="hasRecomend" jdbcType="INTEGER" />
    <result column="has_dividend" property="hasDividend" jdbcType="INTEGER" />
    <result column="period_excitation" property="periodExcitation" jdbcType="INTEGER" />
    <result column="cur_period_excitation" property="curPeriodExcitation" jdbcType="INTEGER" />
    <result column="excitation_project" property="excitationProject" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_no, object_oriented, uid, payment, create_time, update_time, total_ledger_amount, 
    consume_ledger, privilege_ledger, current_consume_ledger, current_privilege_ledger, 
    current_dividend_ledger, current_dividend_coin_ledger, ledger_level, debitcard_id, 
    quota, version, has_recomend, has_dividend, period_excitation, cur_period_excitation
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_live_privilege
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_live_privilege
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege" >
    insert into t_live_privilege (id, order_no, object_oriented, 
      uid, payment, create_time, 
      update_time, total_ledger_amount, consume_ledger, 
      privilege_ledger, current_consume_ledger, 
      current_privilege_ledger, current_dividend_ledger, 
      current_dividend_coin_ledger, ledger_level, 
      debitcard_id, quota, version, 
      has_recomend, has_dividend, period_excitation, 
      cur_period_excitation)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{objectOriented,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{totalLedgerAmount,jdbcType=DECIMAL}, #{consumeLedger,jdbcType=DECIMAL}, 
      #{privilegeLedger,jdbcType=DECIMAL}, #{currentConsumeLedger,jdbcType=DECIMAL}, 
      #{currentPrivilegeLedger,jdbcType=DECIMAL}, #{currentDividendLedger,jdbcType=DECIMAL}, 
      #{currentDividendCoinLedger,jdbcType=DECIMAL}, #{ledgerLevel,jdbcType=INTEGER}, 
      #{debitcardId,jdbcType=INTEGER}, #{quota,jdbcType=DECIMAL}, #{version,jdbcType=INTEGER}, 
      #{hasRecomend,jdbcType=INTEGER}, #{hasDividend,jdbcType=INTEGER}, #{periodExcitation,jdbcType=INTEGER}, 
      #{curPeriodExcitation,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege" >
    insert into t_live_privilege
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="objectOriented != null" >
        object_oriented,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="totalLedgerAmount != null" >
        total_ledger_amount,
      </if>
      <if test="consumeLedger != null" >
        consume_ledger,
      </if>
      <if test="privilegeLedger != null" >
        privilege_ledger,
      </if>
      <if test="currentConsumeLedger != null" >
        current_consume_ledger,
      </if>
      <if test="currentPrivilegeLedger != null" >
        current_privilege_ledger,
      </if>
      <if test="currentDividendLedger != null" >
        current_dividend_ledger,
      </if>
      <if test="currentDividendCoinLedger != null" >
        current_dividend_coin_ledger,
      </if>
      <if test="ledgerLevel != null" >
        ledger_level,
      </if>
      <if test="debitcardId != null" >
        debitcard_id,
      </if>
      <if test="quota != null" >
        quota,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="hasRecomend != null" >
        has_recomend,
      </if>
      <if test="hasDividend != null" >
        has_dividend,
      </if>
      <if test="periodExcitation != null" >
        period_excitation,
      </if>
      <if test="curPeriodExcitation != null" >
        cur_period_excitation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="objectOriented != null" >
        #{objectOriented,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalLedgerAmount != null" >
        #{totalLedgerAmount,jdbcType=DECIMAL},
      </if>
      <if test="consumeLedger != null" >
        #{consumeLedger,jdbcType=DECIMAL},
      </if>
      <if test="privilegeLedger != null" >
        #{privilegeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentConsumeLedger != null" >
        #{currentConsumeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentPrivilegeLedger != null" >
        #{currentPrivilegeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentDividendLedger != null" >
        #{currentDividendLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentDividendCoinLedger != null" >
        #{currentDividendCoinLedger,jdbcType=DECIMAL},
      </if>
      <if test="ledgerLevel != null" >
        #{ledgerLevel,jdbcType=INTEGER},
      </if>
      <if test="debitcardId != null" >
        #{debitcardId,jdbcType=INTEGER},
      </if>
      <if test="quota != null" >
        #{quota,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="hasRecomend != null" >
        #{hasRecomend,jdbcType=INTEGER},
      </if>
      <if test="hasDividend != null" >
        #{hasDividend,jdbcType=INTEGER},
      </if>
      <if test="periodExcitation != null" >
        #{periodExcitation,jdbcType=INTEGER},
      </if>
      <if test="curPeriodExcitation != null" >
        #{curPeriodExcitation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege" >
    update t_live_privilege
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="objectOriented != null" >
        object_oriented = #{objectOriented,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalLedgerAmount != null" >
        total_ledger_amount = #{totalLedgerAmount,jdbcType=DECIMAL},
      </if>
      <if test="consumeLedger != null" >
        consume_ledger = #{consumeLedger,jdbcType=DECIMAL},
      </if>
      <if test="privilegeLedger != null" >
        privilege_ledger = #{privilegeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentConsumeLedger != null" >
        current_consume_ledger = #{currentConsumeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentPrivilegeLedger != null" >
        current_privilege_ledger = #{currentPrivilegeLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentDividendLedger != null" >
        current_dividend_ledger = #{currentDividendLedger,jdbcType=DECIMAL},
      </if>
      <if test="currentDividendCoinLedger != null" >
        current_dividend_coin_ledger = #{currentDividendCoinLedger,jdbcType=DECIMAL},
      </if>
      <if test="ledgerLevel != null" >
        ledger_level = #{ledgerLevel,jdbcType=INTEGER},
      </if>
      <if test="debitcardId != null" >
        debitcard_id = #{debitcardId,jdbcType=INTEGER},
      </if>
      <if test="quota != null" >
        quota = #{quota,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="hasRecomend != null" >
        has_recomend = #{hasRecomend,jdbcType=INTEGER},
      </if>
      <if test="hasDividend != null" >
        has_dividend = #{hasDividend,jdbcType=INTEGER},
      </if>
      <if test="periodExcitation != null" >
        period_excitation = #{periodExcitation,jdbcType=INTEGER},
      </if>
      <if test="curPeriodExcitation != null" >
        cur_period_excitation = #{curPeriodExcitation,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege" >
    update t_live_privilege
    set order_no = #{orderNo,jdbcType=VARCHAR},
      object_oriented = #{objectOriented,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      total_ledger_amount = #{totalLedgerAmount,jdbcType=DECIMAL},
      consume_ledger = #{consumeLedger,jdbcType=DECIMAL},
      privilege_ledger = #{privilegeLedger,jdbcType=DECIMAL},
      current_consume_ledger = #{currentConsumeLedger,jdbcType=DECIMAL},
      current_privilege_ledger = #{currentPrivilegeLedger,jdbcType=DECIMAL},
      current_dividend_ledger = #{currentDividendLedger,jdbcType=DECIMAL},
      current_dividend_coin_ledger = #{currentDividendCoinLedger,jdbcType=DECIMAL},
      ledger_level = #{ledgerLevel,jdbcType=INTEGER},
      debitcard_id = #{debitcardId,jdbcType=INTEGER},
      quota = #{quota,jdbcType=DECIMAL},
      version = #{version,jdbcType=INTEGER},
      has_recomend = #{hasRecomend,jdbcType=INTEGER},
      has_dividend = #{hasDividend,jdbcType=INTEGER},
      period_excitation = #{periodExcitation,jdbcType=INTEGER},
      cur_period_excitation = #{curPeriodExcitation,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <!--  自定义区域 -->
	<sql id="baseSellerCondition">
		<if test="id != null">
			AND t.id = #{id}
		</if>
		<if test="uid != null">
			AND t.uid = #{uid}
		</if>
		<if test="projectName != null and '' != projectName">
			AND t.excitation_project = #{projectName}
		</if>
		<if test="orderNo != null and '' != orderNo">
			AND t.order_no = #{orderNo}
		</if>
		<if test="createTime != null">
			AND t.create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateTime != null">
			AND t.update_time = #{updateTime,jdbcType=TIMESTAMP}
		</if>

	</sql>

	<select id="countLivePrivilege" resultType="Long" parameterType="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege">
		SELECT COUNT(1) FROM t_live_pay_order t INNER JOIN
		t_live_privilege tr ON t.order_no = tr.order_no 
		<where>
			1=1
			AND t.object_oriented = 4 AND t.pay_state = 1 AND tr.object_oriented = 4
			<include refid="baseSellerCondition" />
			<if test="ledgerLevel != null ">
				AND tr.ledger_level = #{ledgerLevel}
			</if>
		</where>
	</select>
  
   <!-- V客充值奖励列表 -->
   <select id="getLivePrivilegeList" resultMap="BaseResultMap" parameterType="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege" >
		SELECT
		tr.order_no, tr.object_oriented, tr.uid, tr.period_excitation, tr.cur_period_excitation, t.excitation_project as projectName, tr.ledger_level as ledgerLevel
		, tr.create_time, t.id AS rechargeId
		FROM t_live_pay_order t INNER JOIN
		t_live_privilege tr ON t.order_no = tr.order_no 
		<where>
			1 = 1
			AND t.object_oriented = 4 AND t.pay_state = 1 AND tr.object_oriented = 4
			<include refid="baseSellerCondition" />
			<!-- <if test="levelName !=null and '' != levelName">
				AND t.level_name LIKE '%${levelName}%'
			</if> -->
			<if test="ledgerLevel != null ">
				AND tr.ledger_level = #{ledgerLevel}
			</if>
		</where>
		ORDER BY t.update_time DESC, t.id DESC
		<if test=" limit != -1 ">
			LIMIT ${(page-1)*limit}, #{limit}
		</if>
	</select>

	<select id="getLivePrivilegeByOrderNo" resultMap="BaseResultMap" >
		SELECT
		<include refid="Base_Column_List" />
		FROM t_live_privilege t
		<where>
			1=1
			AND t.order_no = #{orderNo}
		</where>
		LIMIT 0,1
	</select>

	<select id="getRecommendMemberList" resultMap="BaseResultMap" parameterType="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege">
		SELECT t.uid, t.excitation_project
		, MAX(t1.ledger_level) AS ledger_level
		<!-- , SUM(t.payment) AS payment -->
		FROM t_live_pay_order t LEFT JOIN t_live_privilege t1 ON t.order_no = t1.order_no
		<where>
			1=1
			AND t.object_oriented = 4 AND t.pay_state = 1
			<include refid="baseSellerCondition"></include>
		</where>
		GROUP BY t.uid
    	<if test="ledgerLevel != null ">
			HAVING ledgerLevel = #{ledgerLevel}
		</if>
		order by pay_time desc
		<if test=" limit != -1 ">
			LIMIT ${(page-1)*limit},#{limit}
		</if>
	</select>

	<select id="countRecommendMember" resultType="java.lang.Long" parameterType="com.xmniao.xmn.core.reward_dividends.entity.TLivePrivilege">
		SELECT count(1) FROM
		(SELECT 1, t1.ledger_level AS ledgerLevel  FROM t_live_pay_order t LEFT JOIN t_live_privilege t1 ON t.order_no = t1.order_no
		<where>
			1=1
			AND t.object_oriented = 4 AND t.pay_state = 1
			<include refid="baseSellerCondition"></include>
		</where>
		GROUP BY t.uid
		<if test="ledgerLevel != null ">
			HAVING ledgerLevel = #{ledgerLevel}
		</if>
		) t
	</select>
	
	<select id="getRecommendMemberListByUids" resultMap="BaseResultMap" parameterType="Object">
		SELECT t.order_no, t.uid, t.payment
		FROM t_live_pay_order t
		<where>
			1=1
			AND t.object_oriented = 4 AND t.pay_state = 1
			AND t.uid IN
			<foreach item="item" index="index" collection="array" open="("
				separator="," close=") ">
				#{item}
			</foreach>
		</where>
		order by pay_time desc
	</select>
  
</mapper>