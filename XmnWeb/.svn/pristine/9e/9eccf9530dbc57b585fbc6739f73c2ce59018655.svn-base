/**
 * 
 */
package com.xmniao.xmn.core.fresh.controller;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.xmniao.xmn.core.base.BaseController;
import com.xmniao.xmn.core.base.Pageable;
import com.xmniao.xmn.core.base.Resultable;
import com.xmniao.xmn.core.common.service.CkeditorUpdateService;
import com.xmniao.xmn.core.fresh.entity.FreshType;
import com.xmniao.xmn.core.fresh.entity.MallPackage;
import com.xmniao.xmn.core.fresh.entity.MallPackageProduct;
import com.xmniao.xmn.core.fresh.entity.ProductInfo;
import com.xmniao.xmn.core.fresh.entity.TSaleGroup;
import com.xmniao.xmn.core.fresh.service.FreshTypeService;
import com.xmniao.xmn.core.fresh.service.MallPackageProductService;
import com.xmniao.xmn.core.fresh.service.MallPackageService;

/**
 * 
 * 项目名称：XmnWeb
 * 
 * 类名称：MallPackageController
 * 
 * 类描述： 在此处添加类描述
 * 
 * 创建人： jianming
 * 
 * 创建时间：2017年8月7日 下午2:58:10 
 * 
 * Copyright (c) 广东寻蜜鸟网络技术有限公司 
 */

@Controller
@RequestMapping("/fresh/mallPackage")
public class MallPackageController extends BaseController{

	@Autowired
	private CkeditorUpdateService ckeditorUpdateService;
	
	@Autowired
	private FreshTypeService freshTypeService;
	
	@Autowired
	private	MallPackageProductService mallPackageProductService;
	
	@Autowired
	private	MallPackageService mallPackageService;
	
	@RequestMapping("/init")
	public Object init(){
		return "fresh/mallPackage/packageList";
	}
	
	@RequestMapping("edit/init")
	public Object editInit(Long id,Model model){
		if(id!=null){
			MallPackage mallPackage = mallPackageService.getObject(id);
			model.addAttribute("mallPackage", mallPackage);
		}
		return "fresh/mallPackage/packageEdit";
	}
	
	@RequestMapping(value ={ "/ckeditorUpload","/edit/ckeditorUpload"}, method = { RequestMethod.POST })
	public void uploadFile3(@RequestParam("upload") MultipartFile filedata, HttpServletRequest request,
			HttpServletResponse response) {
		System.out.println("文件上传Controller3");
		ckeditorUpdateService.ckeditorUpdate(filedata, request, response);
	}
	
	
	@RequestMapping("/init/product")
	public Object initProduct(){
		ModelAndView modelAndView = new ModelAndView("fresh/mallPackage/packageProductList");
		FreshType freshType = new FreshType();
		freshType.setLimit(-1);
		List<FreshType> freshTypes = freshTypeService.getFatherAndChilds(freshType);
		modelAndView.addObject("freshTypes",freshTypes);
		return modelAndView;
	}
	
	
	@RequestMapping("init/list/loadProducts")
	@ResponseBody
	public Object loadCodeIds(@RequestParam(required=true)String ids){
		List<MallPackageProduct> products= mallPackageProductService.getByIds(Arrays.asList(ids.split(",")));
		List<Map<String,Object>> result= new ArrayList<>();
		for (MallPackageProduct mallPackageProduct : products) {
			Map<String,Object> map =new HashMap<>();
			map.put("productName", mallPackageProduct.getProductName());
			map.put("number", mallPackageProduct.getNumber());
			map.put("pvValue", mallPackageProduct.getPvValue());
			map.put("id", mallPackageProduct.getId());
			ProductInfo productInfo = mallPackageProduct.getProductInfo();
			TSaleGroup saleGroup = mallPackageProduct.getSaleGroup();
			if(saleGroup!=null){
				BigDecimal cash = productInfo.getCash(); //现金
				BigDecimal integral = productInfo.getIntegral(); //鸟币 
				BigDecimal amount = saleGroup.getAmount(); //加价金额
				map.put("cash", cash.add(amount));
				map.put("zbalance", integral);
				map.put("stock", saleGroup.getStock());
			}else{
				map.put("cash", productInfo.getCash());
				map.put("zbalance", productInfo.getIntegral());
				map.put("stock", productInfo.getStore());
			}
			result.add(map);
		}
		Resultable success = Resultable.success();
		success.setData(result);
		return success;
	}
	
	@RequestMapping("/edit/mallPackage")
	@ResponseBody
	public Object addProduct(MallPackageProduct mallPackageProduct){
		mallPackageProductService.add(mallPackageProduct);
		Resultable success = Resultable.success();
		success.setData(mallPackageProduct);
		return success;
	}
	 

	@RequestMapping("/delete/product")
	@ResponseBody
	public Object deleteProduct(@RequestParam(required=true)Long id){
		mallPackageProductService.deleteByPrimaryKey(id.longValue());
		return Resultable.success();
	}
	
	@RequestMapping("/edit/package")
	@ResponseBody
	public Object addPackage(MallPackage mallPackage){
		if(mallPackage.getId()!=null){
			mallPackageService.update(mallPackage);
		}else{
			mallPackageService.add(mallPackage);
		}
		return Resultable.success();
	}
	
	@RequestMapping("/init/list")
	@ResponseBody
	public Object initList(MallPackage mallPackage){
		Pageable<MallPackage> pageable = new Pageable<>(mallPackage);
		pageable.setContent(mallPackageService.getList(mallPackage));
		pageable.setTotal(mallPackageService.count(mallPackage));
		return pageable;
	}
	
	@RequestMapping("init/list/product")
	public Object productList(@RequestParam(required=true)Long id){
		ModelAndView modelAndView = new ModelAndView("fresh/mallPackage/productList");
		List<MallPackageProduct> products = mallPackageProductService.getListByPackageId(id);
		modelAndView.addObject("products", products);
		return modelAndView;
	}
	
	@RequestMapping("edit/statusBatch")
	@ResponseBody
	public Object statusBatch(@RequestParam("ids") String ids,@RequestParam("status") String status){
			mallPackageService.updateStatusBatch(Arrays.asList(ids.split(",")),status);
			return Resultable.success();
	}

}
