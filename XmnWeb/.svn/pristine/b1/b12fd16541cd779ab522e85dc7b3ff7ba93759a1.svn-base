/**
 * 
 */
package com.xmniao.xmn.core.manor.service;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xmniao.xmn.core.base.BaseDao;
import com.xmniao.xmn.core.base.BaseService;
import com.xmniao.xmn.core.base.Pageable;
import com.xmniao.xmn.core.manor.dao.ManorHoneyManageDao;
import com.xmniao.xmn.core.manor.dao.ManorInfoDao;
import com.xmniao.xmn.core.manor.entity.TManorHoneyManage;
import com.xmniao.xmn.core.manor.entity.TManorInfo;
import com.xmniao.xmn.core.thrift.client.proxy.ThriftClientProxy;
import com.xmniao.xmn.core.thrift.service.manorService.ResultList;
import com.xmniao.xmn.core.xmnburs.dao.BursDao;
import com.xmniao.xmn.core.xmnburs.entity.Burs;
import com.xmniao.xmn.core.xmnburs.service.BursService;


@Service
public class ManorMemberService extends BaseService<TManorInfo> {

	
	/**
	 * 注入主播(用户)服务
	 */
	@Autowired
	private ManorInfoDao manorInfoDao;
	
	@Autowired
	private BursDao bursDao;
	
	/**
	 * 寻蜜鸟用户Service
	 */
	@Autowired
	private BursService bursService;
	
	/**
	 * 注入获取庄园的服务
	 */
	@Resource(name = "manorPropsThriftServiceClient")
	private ThriftClientProxy manorPropsThriftServiceClient;	
	
	
	@Autowired
	private	ManorHoneyManageDao manorHoneyManageDao;
	


	@SuppressWarnings("rawtypes")
	@Override
	protected BaseDao getBaseDao() {
		// TODO Auto-generated method stub
		return manorInfoDao;
	}

	
	public Pageable<TManorInfo> getManorInfoInfoList(TManorInfo manorInfo) {
		Pageable<TManorInfo> manorInfoInfoList = new Pageable<TManorInfo>(manorInfo);
		
		//通过会员昵称查询
		/*if (manorInfo.getNickname() != null && !"".equals(manorInfo.getNickname())) {
			Burs burs = new Burs();
			String nickname = manorInfo.getNickname();
			burs.setNname(nickname);
			List<Burs> bursList = bursService.getUrsList(burs);
			if (bursList != null && bursList.size() > 0) {
				Integer uid = bursList.get(0).getUid();
				manorInfo.setUid(uid);
			}
		}*/
		
		List<TManorInfo> manorInfoList = manorInfoDao.getManorMemberList(manorInfo);
		
		//通过关系链查找上级
		if (manorInfoList != null && manorInfoList.size() > 0){
			this.initManorInfoList(manorInfoList);
		}
	
		manorInfoInfoList.setContent(manorInfoList);
		manorInfoInfoList.setTotal(manorInfoDao.countManorMember(manorInfo));
		
	    return manorInfoInfoList;
	}
	
	
	private void initManorInfoList(List<TManorInfo> manorInfoList){
		List<Long> uids = new ArrayList<>();  //用户列表　
		List<Integer> superUids = new ArrayList<Integer>();  //推荐人列表
		
		for (TManorInfo ursRrelation: manorInfoList){  
			Integer uid = ursRrelation.getUid();//取下级
			uids.add(uid.longValue());
			//查询出当前用户的的下线(非当前用户的关系链信息)
			String  relationid = com.xmniao.xmn.core.util.StringUtils.generateUidStr(uid);
			int number = manorInfoDao.getCountEarningRelationByUid(uid, relationid);
			ursRrelation.setLowerLevelNumber(number);
			
			//推荐人(当前用户关系链)
			Integer superUid = ursRrelation.getSuperUid();//推荐人id
			superUids.add(superUid);
		}
		
		//查询推荐人名称信息
		if (superUids.size() > 0) {
			List<Burs> bursList = bursDao.getUrsListByUids(superUids.toArray());
			for (TManorInfo manorInfo: manorInfoList){
				for (Burs object : bursList) {
					if (manorInfo.getSuperUid().equals(object.getUid()) ){
						manorInfo.setSuperName(object.getNname());
					}
				}
			}
		}

		try {
			//连接接口进行查询
//			List<Long> uids = new ArrayList<>();
			com.xmniao.xmn.core.thrift.service.manorService.ManorPropsThriftService.Client client = (com.xmniao.xmn.core.thrift.service.manorService.ManorPropsThriftService.Client) (manorPropsThriftServiceClient.getClient());
			log.info("查询获取用户的花蜜和阳光开始");
			ResultList  response = client.getUserSunAndNectar (uids);
			if(response.getCode() != 1){
				log.error("调用获取用户的花蜜和阳光失败");
				throw new RuntimeException("获取用户的花蜜和阳光失败, 错误信息:"+ response.getStatusCode());
			}
			log.info("获取用户的花蜜和阳光结束，返回值：" + response.getStatusCode());
			//接口返回用户的花蜜和阳光
			List<Map<String, String>> sunAndNectarProfitList = response.getValues();
			
			this.getManorSunAndNectarProfitFromMap(manorInfoList, sunAndNectarProfitList);
			
		} catch (Exception e) {
			log.error("获取用户的花蜜和阳光失败", e);
//			throw new ApplicationException("修改指定收益类型提现手续费率异常", e, new Object[] { liveDepositorsTaxes.getType() });
			
		} finally {
			manorPropsThriftServiceClient.returnCon();
		}
		
		
	}
	
	
	public int saveUpdateActivity(TManorInfo manorInfo) throws Exception{
		manorInfo.setUpdateTime(new Date());
		return manorInfoDao.updateByPrimaryKeySelective(manorInfo);
	}
	
	public TManorInfo getManorInfoData(TManorInfo manorInfo) {
		TManorInfo manorInfoInfo = new TManorInfo();
		Integer recordId = manorInfo.getId();
		if (recordId != null) {
			manorInfoInfo = manorInfoDao.selectByPrimaryKey(recordId);
		}

		return manorInfoInfo;
	}
	
	
	public List<TManorInfo> getManorInfoList(TManorInfo manorInfo) {
		return manorInfoDao.getManorMemberList(manorInfo);
	}
	
	public List<TManorInfo> getManorMemberLowerLevelList(TManorInfo manorInfo) {
		List<TManorInfo> manorInfoList = new ArrayList<TManorInfo>();
		
		List<String> uids=new ArrayList<String>();
		//取下级
		Integer uid = manorInfo.getUid();
		String  relationid = com.xmniao.xmn.core.util.StringUtils.generateUidStr(uid);
		uids = manorInfoDao.getEarningRelationListByUid(uid, relationid);
		//获取用户信息
		if(uids!=null && uids.size()>0){
//			List<Burs> bursList = bursDao.getUrsListByUids(uids.toArray());
		}
		
		
		return manorInfoList;
	}
	
	
	/**
	 * 方法描述：阳光花密数量 <br/>
	 * 创建人： Administrator <br/>
	 * 创建时间：2017年6月20日下午3:58:17 <br/>
	 * @param manorInfoList
	 * @param sunAndNectarProfitList
	 * @throws Exception
	 */
	public void getManorSunAndNectarProfitFromMap(List<TManorInfo> manorInfoList, List<Map<String, String>> sunAndNectarProfitList) throws Exception{
		TManorHoneyManage manorHoneyManage = manorHoneyManageDao.getManorHoneyManageData( new TManorHoneyManage());
		
		for (TManorInfo manorInfo: manorInfoList){
			for (Map<String, String> object : sunAndNectarProfitList) {
				Integer uid = new Integer(object.get("uid"));
				if (manorInfo.getUid().equals(uid) ){
					//阳光的总数量
					manorInfo.setSunNumber(new Double(object.get("sunNumber") == null ? "0" : object.get("sunNumber")) );
					//仓库数量
					manorInfo.setRepositoryNumber(new Double(object.get("repositoryNumber") == null ? "0" : object.get("repositoryNumber")));
					//花蜜的总数量
					Double nectarNumber = new Double(object.get("nectarNumber")== null ? "0" : object.get("nectarNumber"));
					manorInfo.setNectarNumber(nectarNumber );
					manorInfo.setNectarStoreNumber(nectarNumber*manorHoneyManage.getPotHoney().doubleValue());
		            //总共兑换的红包额度
					BigDecimal money = new BigDecimal(object.get("money")== null ? "0" : object.get("money"));
					money = money.setScale(2, BigDecimal.ROUND_HALF_UP);  
					manorInfo.setMoney(money);
				}
			}
			
			
		}
	}
	
	
}
