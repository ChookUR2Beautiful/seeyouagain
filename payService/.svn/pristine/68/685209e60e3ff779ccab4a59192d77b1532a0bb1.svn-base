package com.xmniao.common;


import com.xmniao.entity.WalletExpansionExpenses;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.lang.reflect.Field;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;

/**
 * 处理Map与Bean数据交互
 * Created by yang.qiang on 2017/4/24.
 */
public class MapBeanUtil {
    private final static Logger logger = LoggerFactory.getLogger(MapBeanUtil.class);

    /**
     * 指定属性名, 将一个Bean转换成Map
     * @param resource  需要被转换的Bean
     * @param fields    该Bean需要被转换属性名
     * @return
     */
    public static <T> Map<String,String> convertMap(T resource,String... fields) {
        HashMap<String, String> resultMap = new HashMap<>();

        try {
            Class<?> clazz = resource.getClass();
            for (String fieldName : fields) {
                Field declaredField = clazz.getDeclaredField(fieldName);
                declaredField.setAccessible(true);
                String value = declaredField.get(resource).toString();
                if (value != null) {
                    resultMap.put(fieldName,value);
                }
            }
        } catch (Exception e) {
            logger.error("转换Map出现异常",e);
            throw new RuntimeException("转换Map出现异常",e);
        }

        return resultMap;
    }

    public static void main(String args[]) throws Exception {
        WalletExpansionExpenses walletExpansionExpenses = new WalletExpansionExpenses();
        walletExpansionExpenses.setId(111L);
        walletExpansionExpenses.setRate(new BigDecimal(1111));
        Map<String, String> stringStringMap = convertMap(walletExpansionExpenses,"id","rate");


    }

}
