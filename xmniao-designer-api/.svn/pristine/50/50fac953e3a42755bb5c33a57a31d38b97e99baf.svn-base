package com.xmn.designer.controller.api.v1.material;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.xmn.designer.base.AbstractController;
import com.xmn.designer.base.ResponseCode;
import com.xmn.designer.controller.api.v1.material.vo.MaterialCategoryRequest;
import com.xmn.designer.controller.api.v1.material.vo.MaterialDetailRequest;
import com.xmn.designer.controller.api.v1.material.vo.MaterialListRequest;
import com.xmn.designer.entity.material.Material;
import com.xmn.designer.service.material.MaterialService;

/**
 * 平面物料controller
 * 
 * @author zhouxiaojian
 * @date 2016/11/18
 *
 */
@Controller( "api-v1-material-controller" )
@RequestMapping( value = "api/v1/material" )
public class MaterialController extends AbstractController {
    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private MaterialService materialService;

    /**
     * 分类接口
     * 
     * @throws Exception
     */
    @ResponseBody
    @RequestMapping( value = "/category" , method = RequestMethod.POST )
    public void category(@Valid MaterialCategoryRequest request, BindingResult result)
            throws Exception {
        logger.info("【访问物料分类页面显示接口】-【 post /api/v1/material/category】  参数：" + request.toString());
        if (!request.doValidate(result)) {
            return;
        }
        success(materialService.category(request.getType(), request.getId()));
        return;
    }


    /**
     * 基础物料列表接口
     * 
     * @throws Exception
     */
    @ResponseBody
    @RequestMapping( value = "/list" , method = RequestMethod.POST )
    public void list(@Valid MaterialListRequest request, BindingResult result) throws Exception {
        logger.info("【访问物料列表接口】-【 post /api/v1/material/list】  参数：" + request.toString());
        if (!request.doValidate(result)) {
            return;
        }
        List<Material> list =new ArrayList<>();
        list = materialService.list(request.getMinPrice(), request.getMaxPrice(), request.getCategoryId()
                , request.getTagId(), request.getOrderType(), request.getPage(),
                request.getPageSize());
        Map<String, Object> resultMap = new HashMap<>();
        resultMap.put("msg", "请求成功");
        resultMap.put("code", ResponseCode.SUCCESS);
        resultMap.put("dateList", list);
        success(list,new HashMap<Class<?>, String[]>() {
            {
                put(Material.class, new String[] { "id" ,"title", "picUrl" });
            }
        });
        return;
    }
    
    
    /**
     * 基础物料详情接口
     * 
     * @throws Exception
     */
    @ResponseBody
    @RequestMapping( value = "/detail" , method = RequestMethod.POST )
    public void detail(@Valid MaterialDetailRequest request, BindingResult result) throws Exception {
        logger.info("【访问物料详情接口】-【 post /api/v1/material/detail】  参数：" + request.toString());
        if (!request.doValidate(result)) {
            return;
        }
        
    }

}
