<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmniao.xmn.core.xmer.dao.SellerBrowsedDao" >
  <resultMap id="BaseResultMap" type="com.xmniao.xmn.core.xmer.entity.SellerBrowsed" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="sellerid" property="sellerid" jdbcType="INTEGER" />
    <result column="counts" property="counts" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, sellerid, counts, create_time, update_time,type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_seller_browsed
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_seller_browsed
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmniao.xmn.core.xmer.entity.SellerBrowsed" >
    insert into t_seller_browsed (id, uid, sellerid, 
      counts, create_time, update_time,type
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{sellerid,jdbcType=INTEGER}, 
      #{counts,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},#{type,jdbcType=INTEGER}, 
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xmniao.xmn.core.xmer.entity.SellerBrowsed" >
    insert into t_seller_browsed
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="sellerid != null" >
        sellerid,
      </if>
      <if test="counts != null" >
        counts,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="sellerid != null" >
        #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="counts != null" >
        #{counts,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmniao.xmn.core.xmer.entity.SellerBrowsed" >
    update t_seller_browsed
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="sellerid != null" >
        sellerid = #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="counts != null" >
        counts = #{counts,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmniao.xmn.core.xmer.entity.SellerBrowsed" >
    update t_seller_browsed
    set uid = #{uid,jdbcType=INTEGER},
      sellerid = #{sellerid,jdbcType=INTEGER},
      counts = #{counts,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
      type = #{type,jdbcType=INTEGER},
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询用户浏览过的商铺id -->
  <select id="selectByUid" resultType="map" parameterType="int">
  	SELECT 
		b.uid AS uid,s.sellerid AS sellerid,s.sellername AS sellername,s.province AS province,s.city AS city,
		s.area AS area,s.zoneid AS zoneid,s.category AS category,s.genre AS genre,b.counts AS counts
	FROM t_seller_browsed b
	LEFT JOIN t_seller s ON b.sellerid = s.sellerid 
	WHERE b.uid = #{uid} AND type=0 ORDER BY counts DESC
  </select>
  
  <!-- 通过用户id查询所有浏览记录 -->
  <select id="findAllByUid" resultType="int" parameterType="map">
  	SELECT DISTINCT sellerid
	FROM t_seller WHERE sellerid IN 
		(SELECT DISTINCT sellerid FROM t_seller_browsed
		WHERE uid = #{uid} and type=#{type} order by update_time desc)
	AND status=3 AND isonline=1
	<if test="zoneid != null">
	AND zoneid=#{zoneid}
	</if>
	<if test="tradeid != null">
	AND genre=#{tradeid}
	</if>
	limit ${(pageNo-1)*pageSize},#{pageSize}
  </select>

  <!-- 通过商铺id和用户id查询商铺浏览记录信息 -->
  <select id="queryBrowsedBySellerIdAndUid" resultType="int" parameterType="map">
  	SELECT COUNT(1) FROM t_seller_browsed WHERE uid=#{uid} AND type=#{type} AND sellerid = #{sellerid}
  </select>
  
  <!-- 删除浏览记录 -->
  <delete id="removeBrowseBySelleridAndUid" parameterType="map">
  	delete from t_seller_browsed
    where uid=#{uid} and sellerid=#{sellerid} and type=#{type}
  </delete>
 
</mapper>
