<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmniao.xmn.core.market.dao.FreshModuleDao">
    <resultMap id="BaseResultMap" type="com.xmniao.xmn.core.market.entity.home.FreshModule" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="module_name" property="moduleName" jdbcType="VARCHAR" />
        <result column="module_type" property="moduleType" jdbcType="INTEGER" />
        <result column="product_type" property="productType" jdbcType="INTEGER" />
        <result column="type_id" property="typeId" jdbcType="BIGINT" />
        <result column="activity_id" property="activityId" jdbcType="BIGINT" />
        <result column="show_num" property="showNum" jdbcType="INTEGER" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="image_url" property="imageUrl" jdbcType="VARCHAR"/>
        <result column="jump_url" property="jumpUrl" jdbcType="VARCHAR"/>
        <result column="activity_product_type" property="activityProductType" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List" >
        id, module_name, module_type, product_type, type_id, activity_id, show_num, state,
        sort, create_time, update_time,
        image_url, jump_url, activity_product_type
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from t_fresh_module
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!--查询热卖专场列表-->
    <select id="selectActivityModule" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_fresh_module
        WHERE state = 1
        AND module_type = 3
        ORDER BY sort DESC
    </select>
    <!--查询单个模块-->
    <select id="selectModuleByModelTypeAndTypeId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_fresh_module
        WHERE state = 01
        <if test="moduleType != null">
            AND module_type = #{moduleType}
        </if>
        <if test="typeId != null">
            AND type_id = #{typeId}
        </if>
        ORDER BY sort DESC, update_time desc
        LIMIT 1
    </select>
    <!--查询模块列表-->
    <select id="selectModuleListByModelTypeAndTypeId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_fresh_module
        WHERE state = 01
        <if test="moduleType != null">
            AND module_type = #{moduleType}
        </if>
        <if test="typeId != null">
            AND type_id = #{typeId}
        </if>
        ORDER BY sort DESC, update_time desc
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from t_fresh_module
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.xmniao.xmn.core.market.entity.home.FreshModule" >
        insert into t_fresh_module (id, module_name, module_type,
        product_type, type_id, activity_id,
        show_num, state, sort,
        create_time, update_time)
        values (#{id,jdbcType=BIGINT}, #{moduleName,jdbcType=VARCHAR}, #{moduleType,jdbcType=INTEGER},
        #{productType,jdbcType=INTEGER}, #{typeId,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT},
        #{showNum,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xmniao.xmn.core.market.entity.home.FreshModule" >
        insert into t_fresh_module
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="moduleName != null" >
                module_name,
            </if>
            <if test="moduleType != null" >
                module_type,
            </if>
            <if test="productType != null" >
                product_type,
            </if>
            <if test="typeId != null" >
                type_id,
            </if>
            <if test="activityId != null" >
                activity_id,
            </if>
            <if test="showNum != null" >
                show_num,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="sort != null" >
                sort,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="moduleName != null" >
                #{moduleName,jdbcType=VARCHAR},
            </if>
            <if test="moduleType != null" >
                #{moduleType,jdbcType=INTEGER},
            </if>
            <if test="productType != null" >
                #{productType,jdbcType=INTEGER},
            </if>
            <if test="typeId != null" >
                #{typeId,jdbcType=BIGINT},
            </if>
            <if test="activityId != null" >
                #{activityId,jdbcType=BIGINT},
            </if>
            <if test="showNum != null" >
                #{showNum,jdbcType=INTEGER},
            </if>
            <if test="state != null" >
                #{state,jdbcType=INTEGER},
            </if>
            <if test="sort != null" >
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xmniao.xmn.core.market.entity.home.FreshModule" >
        update t_fresh_module
        <set >
            <if test="moduleName != null" >
                module_name = #{moduleName,jdbcType=VARCHAR},
            </if>
            <if test="moduleType != null" >
                module_type = #{moduleType,jdbcType=INTEGER},
            </if>
            <if test="productType != null" >
                product_type = #{productType,jdbcType=INTEGER},
            </if>
            <if test="typeId != null" >
                type_id = #{typeId,jdbcType=BIGINT},
            </if>
            <if test="activityId != null" >
                activity_id = #{activityId,jdbcType=BIGINT},
            </if>
            <if test="showNum != null" >
                show_num = #{showNum,jdbcType=INTEGER},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="sort != null" >
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xmniao.xmn.core.market.entity.home.FreshModule" >
        update t_fresh_module
        set module_name = #{moduleName,jdbcType=VARCHAR},
        module_type = #{moduleType,jdbcType=INTEGER},
        product_type = #{productType,jdbcType=INTEGER},
        type_id = #{typeId,jdbcType=BIGINT},
        activity_id = #{activityId,jdbcType=BIGINT},
        show_num = #{showNum,jdbcType=INTEGER},
        state = #{state,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>