<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmniao.xmn.core.market.dao.FreshActivityAuctionRecordDao" >
  <resultMap id="BaseResultMap" type="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuctionRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="activity_id" property="activityId" jdbcType="INTEGER" />
    <result column="deposit_state" property="depositState" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="deposit_order" property="depositOrder" jdbcType="VARCHAR" />
    <result column="finish_order" property="finishOrder" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="rised_price" property="risedPrice" jdbcType="DECIMAL" />
    <result column="rised_num" property="risedNum" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
    
  <sql id="pageInfoFilter">
		<if test="pageOffset != null and pageSize != null">
			LIMIT ${pageOffset},${pageSize}
		</if>
  </sql>
  
  <sql id="Base_Column_List" >
    id, activity_id, uid, phone, rised_price, rised_num, state, create_time,deposit_order,finish_order,deposit_state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_fresh_activity_auction_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="selectByPage" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from t_fresh_activity_auction_record
    where uid = #{uid} order by id desc
    <include refid="pageInfoFilter"></include>
  </select>
   <select id="selectByPageCount"  resultType="java.lang.Integer" >
    select 
    count(*)
    from t_fresh_activity_auction_record
    where uid = #{uid} 
  </select>
  
  <select id="selectByUidAndId" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from t_fresh_activity_auction_record
    where activity_id = #{activityId,jdbcType=INTEGER} and uid = #{uid}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_fresh_activity_auction_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuctionRecord" >
    insert into t_fresh_activity_auction_record (id, activity_id, uid, 
      phone, rised_price, rised_num, 
      state, create_time,deposit_order,finish_order,deposit_state,deposit_price,user_name)
    values (#{id,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{risedPrice,jdbcType=DECIMAL}, #{risedNum,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},#{depositOrder},#{finishOrder},#{depositState},#{depositPrice},#{userName})
  </insert>
  <insert id="insertSelective" parameterType="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuctionRecord" >
    insert into t_fresh_activity_auction_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="risedPrice != null" >
        rised_price,
      </if>
      <if test="risedNum != null" >
        rised_num,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="risedPrice != null" >
        #{risedPrice,jdbcType=DECIMAL},
      </if>
      <if test="risedNum != null" >
        #{risedNum,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuctionRecord" >
    update t_fresh_activity_auction_record
    <set >
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="risedPrice != null" >
        rised_price = #{risedPrice,jdbcType=DECIMAL},
      </if>
      <if test="risedNum != null" >
        rised_num = #{risedNum,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuctionRecord" >
    update t_fresh_activity_auction_record
    set activity_id = #{activityId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      rised_price = #{risedPrice,jdbcType=DECIMAL},
      rised_num = #{risedNum,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>