<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmniao.xmn.core.market.dao.FreshActivityAuctionDao" >
  <resultMap id="BaseResultMap" type="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuction" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="term_time" property="termTime" jdbcType="TIMESTAMP" />
    <result column="codeId" property="codeid" jdbcType="BIGINT" />
    <result column="pv_ids" property="pvIds" jdbcType="VARCHAR" />
    <result column="pv_value" property="pvValue" jdbcType="VARCHAR" />
    <result column="base_price" property="basePrice" jdbcType="DECIMAL" />
    <result column="start_price" property="startPrice" jdbcType="DECIMAL" />
    <result column="scope" property="scope" jdbcType="DECIMAL" />
    <result column="insurance_price" property="insurancePrice" jdbcType="DECIMAL" />
    <result column="product_status" property="productStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="pageInfoFilter">
		<if test="pageOffset != null and pageSize != null">
			LIMIT ${pageOffset},${pageSize}
		</if>
  </sql>
  
  <select id="findByPage" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from t_fresh_activity_auction where state=0 and begin_time>= CURRENT_TIME and product_status =0 and proceed_status =2 order by id desc
	<include refid="pageInfoFilter"></include>
  </select>
  
  <select id="findByPageCount" resultType="java.lang.Integer">
	select
	count(*)
	from t_fresh_activity_auction  where state=0  and begin_time>= CURRENT_TIME and product_status =0 and proceed_status =2
  </select>
  
  <sql id="Base_Column_List" >
    id, title, state, begin_time, end_time, term_time, codeId, pv_ids, pv_value, base_price, 
    start_price, scope, insurance_price, product_status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_fresh_activity_auction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_fresh_activity_auction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuction" >
    insert into t_fresh_activity_auction (id, title, state, 
      begin_time, end_time, term_time, 
      codeId, pv_ids, pv_value, 
      base_price, start_price, scope, 
      insurance_price, product_status, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{termTime,jdbcType=TIMESTAMP}, 
      #{codeid,jdbcType=BIGINT}, #{pvIds,jdbcType=VARCHAR}, #{pvValue,jdbcType=VARCHAR}, 
      #{basePrice,jdbcType=DECIMAL}, #{startPrice,jdbcType=DECIMAL}, #{scope,jdbcType=DECIMAL}, 
      #{insurancePrice,jdbcType=DECIMAL}, #{productStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuction" >
    insert into t_fresh_activity_auction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="termTime != null" >
        term_time,
      </if>
      <if test="codeid != null" >
        codeId,
      </if>
      <if test="pvIds != null" >
        pv_ids,
      </if>
      <if test="pvValue != null" >
        pv_value,
      </if>
      <if test="basePrice != null" >
        base_price,
      </if>
      <if test="startPrice != null" >
        start_price,
      </if>
      <if test="scope != null" >
        scope,
      </if>
      <if test="insurancePrice != null" >
        insurance_price,
      </if>
      <if test="productStatus != null" >
        product_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="termTime != null" >
        #{termTime,jdbcType=TIMESTAMP},
      </if>
      <if test="codeid != null" >
        #{codeid,jdbcType=BIGINT},
      </if>
      <if test="pvIds != null" >
        #{pvIds,jdbcType=VARCHAR},
      </if>
      <if test="pvValue != null" >
        #{pvValue,jdbcType=VARCHAR},
      </if>
      <if test="basePrice != null" >
        #{basePrice,jdbcType=DECIMAL},
      </if>
      <if test="startPrice != null" >
        #{startPrice,jdbcType=DECIMAL},
      </if>
      <if test="scope != null" >
        #{scope,jdbcType=DECIMAL},
      </if>
      <if test="insurancePrice != null" >
        #{insurancePrice,jdbcType=DECIMAL},
      </if>
      <if test="productStatus != null" >
        #{productStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuction" >
    update t_fresh_activity_auction
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="termTime != null" >
        term_time = #{termTime,jdbcType=TIMESTAMP},
      </if>
      <if test="codeid != null" >
        codeId = #{codeid,jdbcType=BIGINT},
      </if>
      <if test="pvIds != null" >
        pv_ids = #{pvIds,jdbcType=VARCHAR},
      </if>
      <if test="pvValue != null" >
        pv_value = #{pvValue,jdbcType=VARCHAR},
      </if>
      <if test="basePrice != null" >
        base_price = #{basePrice,jdbcType=DECIMAL},
      </if>
      <if test="startPrice != null" >
        start_price = #{startPrice,jdbcType=DECIMAL},
      </if>
      <if test="scope != null" >
        scope = #{scope,jdbcType=DECIMAL},
      </if>
      <if test="insurancePrice != null" >
        insurance_price = #{insurancePrice,jdbcType=DECIMAL},
      </if>
      <if test="productStatus != null" >
        product_status = #{productStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmniao.xmn.core.market.entity.activity.FreshActivityAuction" >
    update t_fresh_activity_auction
    set title = #{title,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      term_time = #{termTime,jdbcType=TIMESTAMP},
      codeId = #{codeid,jdbcType=BIGINT},
      pv_ids = #{pvIds,jdbcType=VARCHAR},
      pv_value = #{pvValue,jdbcType=VARCHAR},
      base_price = #{basePrice,jdbcType=DECIMAL},
      start_price = #{startPrice,jdbcType=DECIMAL},
      scope = #{scope,jdbcType=DECIMAL},
      insurance_price = #{insurancePrice,jdbcType=DECIMAL},
      product_status = #{productStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>